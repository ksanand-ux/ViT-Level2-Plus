name: Train ViT Model

on:
  push:
    branches:
      - main
    paths:
      - 'train_vit.py'
      - 'utils/**'
      - 'requirements.txt'
      - '.github/workflows/train.yml'

jobs:
  train:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Debug AWS creds
      run: |
        echo "AWS_ACCESS_KEY_ID= $AWS_ACCESS_KEY_ID"
        echo "AWS_SECRET_ACCESS_KEY= ${AWS_SECRET_ACCESS_KEY:0:4}â€¦"
        aws sts get-caller-identity || echo "STS call failed"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set PYTHONPATH
      run: |
        echo "PYTHONPATH=$PWD" >> $GITHUB_ENV

    - name: Run ViT training
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        python train_vit.py \
          --train_dir vit-data/train \
          --val_dir vit-data/val \
          --epochs 1 \
          --upload_to_s3 \
          --s3_bucket e-see-vit-model

    - name: Download YOLOv8 dataset from S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        mkdir -p yolo-data
        aws s3 cp --recursive s3://e-see-vit-model/yolo-data/ ./        

    - name: Run YOLOv8 training
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        python train_yolov8.py \
          --data yolo-data/data.yaml \
          --epochs 1 \
          --upload_to_s3 \
          --s3_bucket e-see-vit-model

    - name: Enforce accuracy threshold
      run: |
        echo "Checking validation accuracy in metrics.json..."
        VAL_ACC=$(python -c "import json; data=json.load(open('outputs/metrics.json')); print(data.get('accuracy', 0))")
        echo "Validation accuracy: $VAL_ACC"
        ACC_THRESHOLD=0.80
        if (( $(echo "$VAL_ACC < $ACC_THRESHOLD" | bc -l) )); then
          echo "Accuracy $VAL_ACC is below threshold $ACC_THRESHOLD"
          exit 1
        else
          echo "Accuracy $VAL_ACC passed the threshold $ACC_THRESHOLD"
        fi
